var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.053,1,1.973]],["body/classes/AllExceptionsFilter.html",[0,0.079,1,2.52,2,1.319,3,0.317,4,0.274,5,0.232,6,3.301,7,2.365,8,2.045,9,4.486,10,4.586,11,4.486,12,2.52,13,4.586,14,0.41,15,0.966,16,3.98,17,3.559,18,4.963,19,0.569,20,2.851,21,0.76,22,0.035,23,0.569,24,0.513,25,0.76,26,0.692,27,1.805,28,0.572,29,3.301,30,0.46,31,1.614,32,0.317,33,2.851,34,2.851,35,3.98,36,2.851,37,1.2,38,2.52,39,2.851,40,2.365,41,2.365,42,2.851,43,1.905,44,2.365,45,2.851,46,1.2,47,2.851,48,3.98,49,2.365,50,2.851,51,2.851,52,2.045,53,2.851,54,2.851,55,2.851,56,1.2,57,2.851,58,2.52,59,2.851,60,2.851,61,1.805,62,2.851,63,2.851,64,2.851,65,2.365,66,2.851,67,0.022,68,0.022]],["title/controllers/AppController.html",[69,1.311,70,1.973]],["body/controllers/AppController.html",[0,0.067,3,0.435,4,0.376,5,0.319,14,0.563,15,1.192,19,0.781,22,0.035,26,0.95,28,0.706,30,0.632,32,0.435,67,0.028,68,0.028,69,2.067,70,3.11,71,1.811,72,3.246,73,4.668,74,2.478,75,3.914,76,1.572,77,2.74,78,3.246,79,1.998,80,2.807,81,1.043,82,3.914]],["title/modules/AppModule.html",[83,1.59,84,1.973]],["body/modules/AppModule.html",[0,0.032,1,1.831,3,0.206,4,0.178,5,0.151,11,1.536,15,0.449,17,1.328,19,0.369,21,0.493,22,0.036,23,0.369,24,0.333,25,0.493,26,0.449,27,1.172,28,0.81,30,0.299,31,1.048,32,0.206,38,2.252,46,0.779,52,2.55,67,0.016,68,0.016,70,2.252,71,1.338,77,2.358,78,1.536,83,1.476,84,3.323,85,0.945,86,1.476,87,1.536,88,1.536,89,1.536,90,2.358,91,2.358,92,1.831,93,1.172,94,1.172,95,1.851,96,2.073,97,2.073,98,1.851,99,2.891,100,4.019,101,1.851,102,2.891,103,2.398,104,1.851,105,2.891,106,1.851,107,1.851,108,1.851,109,1.851,110,1.172,111,2.073,112,1.851,113,2.891,114,4.019,115,2.891,116,1.851,117,1.851,118,1.851,119,1.536,120,1.536,121,1.172,122,1.851,123,1.328,124,1.637,125,1.851,126,1.637,127,1.851,128,1.851,129,1.172,130,1.831,131,1.851,132,1.851,133,1.851,134,1.851,135,1.851,136,2.891,137,1.86,138,2.55,139,1.851,140,1.851,141,1.851,142,1.851,143,1.851,144,1.851,145,1.851,146,1.851,147,1.851,148,1.851,149,1.851,150,1.851,151,1.851,152,1.851,153,1.851,154,1.851,155,2.891,156,1.536,157,2.891,158,1.851,159,3.556,160,1.851,161,0.857,162,1.851,163,1.851,164,2.398,165,1.851,166,1.851,167,1.851,168,3.616,169,1.851,170,4.359,171,4.359,172,1.851,173,2.252,174,1.048,175,1.851,176,0.857,177,1.851,178,1.851,179,2.545,180,2.891,181,1.851,182,1.851,183,1.328,184,1.851]],["title/injectables/AppService.html",[77,1.59,185,0.503]],["body/injectables/AppService.html",[0,0.07,3,0.457,4,0.395,5,0.335,14,0.591,15,1.229,19,0.821,22,0.035,26,0.998,28,0.591,30,0.664,32,0.457,67,0.028,68,0.028,73,4.751,76,1.621,77,2.585,81,1.096,185,0.817,186,1.731,187,3.411,188,4.112,189,4.112,190,4.112]],["title/guards/AuthGuard.html",[124,1.764,173,1.973]],["body/guards/AuthGuard.html",[0,0.051,3,0.329,4,0.284,5,0.241,14,0.425,15,0.99,19,0.814,21,1.088,22,0.036,23,0.814,24,0.734,25,1.088,26,0.717,28,0.725,30,0.477,31,1.673,32,0.329,37,1.244,43,1.566,46,1.967,56,1.244,67,0.023,68,0.023,79,1.508,81,1.088,124,2.311,137,1.888,176,1.367,185,0.658,191,2.119,192,2.451,193,4.387,194,2.451,195,4.536,196,2.955,197,2.451,198,3.615,199,2.955,200,3.384,201,3.384,202,2.926,203,4.674,204,4.08,205,2.451,206,2.119,207,2.451,208,3.384,209,2.955,210,2.451,211,2.451,212,1.871,213,2.451,214,2.955,215,4.08,216,2.451,217,2.955,218,1.871]],["title/classes/Cat.html",[0,0.053,219,1.764]],["body/classes/Cat.html",[0,0.055,2,1.475,3,0.354,4,0.306,5,0.26,12,2.721,14,0.699,19,1.038,22,0.035,23,0.97,24,0.936,28,0.458,32,0.354,67,0.024,68,0.024,74,3.294,76,1.375,137,1.475,161,2.589,179,2.018,219,2.752,220,2.643,221,4.86,222,3.081,223,2.752,224,2.752,225,2.752,226,4.296,227,3.187,228,3.187,229,3.187,230,3.187,231,3.187,232,3.187,233,3.187,234,4.296,235,5.431,236,4.296,237,3.187,238,3.564,239,3.187,240,2.285,241,2.018,242,3.187,243,3.187,244,3.187,245,4.86]],["title/controllers/CatsController.html",[69,1.311,246,1.973]],["body/controllers/CatsController.html",[0,0.019,3,0.126,4,0.109,5,0.274,14,0.163,15,0.47,17,1.389,19,0.915,21,1.098,22,0.036,23,0.888,24,0.741,25,1.098,26,1.113,27,1.896,28,0.739,29,0.942,30,0.183,32,0.126,37,0.478,40,0.942,43,0.743,46,1.645,52,1.389,56,0.815,61,3.107,65,0.942,67,0.011,68,0.011,69,0.815,71,0.525,74,2.905,76,1.375,81,1.145,103,0.942,123,0.814,124,0.643,126,0.643,129,0.719,137,1.694,138,0.814,156,0.942,161,1.172,164,1.607,174,0.643,179,0.719,202,1.817,207,0.942,212,1.227,213,0.942,225,1.097,246,1.227,247,0.942,248,0.942,249,1.097,250,3.036,251,1.896,252,2.533,253,1.227,254,2.533,255,1.937,256,1.937,257,2.994,258,1.937,259,1.937,260,3.66,261,1.135,262,1.868,263,1.135,264,0.896,265,1.135,266,1.135,267,1.135,268,1.135,269,2.332,270,3.451,271,1.135,272,1.135,273,0.719,274,1.135,275,1.135,276,0.942,277,1.135,278,1.135,279,1.135,280,1.135,281,1.135,282,1.937,283,1.135,284,3.361,285,1.937,286,1.135,287,1.937,288,1.135,289,2.533,290,1.937,291,2.533,292,1.937,293,1.937,294,1.135,295,1.135,296,1.937,297,1.135,298,1.135,299,2.994,300,1.135,301,1.135,302,1.135,303,1.937,304,1.135,305,1.937,306,1.135,307,0.942,308,1.135,309,2.533,310,0.814,311,1.135,312,1.135,313,1.135,314,0.942,315,1.937,316,1.607,317,1.135,318,1.937,319,1.135,320,1.135,321,1.135,322,1.937,323,1.135,324,1.389,325,0.643,326,0.719,327,0.942,328,1.172,329,0.942,330,1.172,331,1.135,332,1.135,333,1.135,334,1.135,335,0.719,336,0.942,337,1.135,338,0.814,339,1.135,340,1.135,341,1.135,342,0.942,343,1.389,344,1.389,345,1.135,346,1.135,347,1.135,348,0.942,349,1.937,350,1.135,351,1.607,352,1.135,353,1.135,354,1.135,355,1.135,356,1.937,357,1.135,358,1.389,359,1.135,360,1.135,361,1.135,362,1.135,363,1.135,364,2.533,365,1.135,366,1.135,367,1.172,368,1.135,369,1.135,370,1.135,371,1.135,372,1.135,373,1.135,374,0.942,375,1.135,376,1.135,377,1.135,378,0.942,379,1.135,380,1.135,381,1.135,382,1.135,383,1.607,384,0.942,385,1.135,386,1.135,387,1.135,388,1.135,389,1.135,390,1.135,391,1.135,392,1.135,393,1.135,394,1.135,395,1.135,396,1.135,397,1.135,398,1.135,399,0.942,400,1.135,401,1.135,402,1.135,403,1.135,404,0.942,405,0.942,406,1.135,407,1.135,408,1.135,409,1.135,410,1.135,411,1.135,412,1.135,413,1.135,414,1.135,415,1.135,416,1.135,417,1.135,418,1.135,419,1.135,420,1.135,421,1.135,422,1.135,423,1.135,424,1.135,425,1.135,426,1.135,427,1.135,428,1.937,429,1.135,430,1.135,431,1.135,432,1.135,433,1.135,434,1.135,435,1.937,436,1.937,437,1.135,438,1.135]],["title/modules/CatsModule.html",[83,1.59,90,1.59]],["body/modules/CatsModule.html",[0,0.058,3,0.374,4,0.323,5,0.274,22,0.035,28,0.817,30,0.543,32,0.374,67,0.025,68,0.025,71,2.063,83,2.276,85,1.719,86,2.276,90,2.96,91,2.276,92,2.823,93,2.132,94,2.132,96,3.197,97,2.415,120,2.793,121,2.132,219,1.907,246,3.164,310,3.197,328,2.825,329,2.793,439,2.793,440,2.793,441,2.793,442,3.367,443,3.697,444,3.367,445,3.367,446,2.793,447,3.367]],["title/injectables/CatsService.html",[185,0.503,328,1.442]],["body/injectables/CatsService.html",[0,0.041,3,0.266,4,0.23,5,0.195,9,1.984,14,0.344,15,0.852,19,0.974,21,1.108,22,0.036,23,0.974,24,0.748,25,1.108,26,1.009,28,0.702,30,0.386,32,0.266,37,1.478,38,1.515,43,1.347,67,0.02,68,0.02,76,0.766,80,2.982,81,0.936,121,1.515,137,1.107,161,1.924,179,2.901,185,0.566,186,1.007,202,2.518,219,2.355,222,2.518,223,1.988,224,1.355,225,2.355,240,2.518,241,1.515,249,1.988,250,4.23,251,2.901,253,2.223,262,2.339,273,2.223,326,1.515,327,1.984,328,1.624,358,3.285,367,1.107,446,1.984,448,1.984,449,2.392,450,3.51,451,3.51,452,3.51,453,2.392,454,2.392,455,2.392,456,1.984,457,2.392,458,2.392,459,2.392,460,2.392,461,2.392,462,3.51,463,2.392,464,2.392,465,1.984,466,1.984,467,2.392,468,2.392,469,2.392,470,2.392,471,3.51,472,2.392,473,2.392,474,2.392]],["title/classes/CreateCatDto.html",[0,0.053,262,1.59]],["body/classes/CreateCatDto.html",[0,0.073,2,1.459,3,0.351,4,0.303,5,0.257,14,0.453,19,0.965,22,0.035,23,1.034,24,0.87,28,0.613,30,0.509,32,0.538,43,1.637,56,1.327,58,2.701,67,0.024,68,0.024,76,1.658,79,1.61,81,0.84,161,1.974,176,1.459,185,0.688,218,1.997,222,3.059,223,2.933,224,2.933,262,2.178,264,1.459,325,1.786,367,1.459,475,3.28,476,1.997,477,3.153,478,3.153,479,3.153,480,3.059,481,3.059,482,2.261,483,2.701,484,2.261,485,3.059,486,2.261,487,2.261,488,2.615,489,2.261,490,1.997,491,2.261,492,2.261,493,2.261]],["title/classes/CreateUserDto.html",[0,0.053,494,1.59]],["body/classes/CreateUserDto.html",[0,0.079,2,2.139,3,0.514,4,0.444,5,0.377,22,0.032,32,0.514,67,0.03,68,0.03,494,2.774,495,3.835,496,3.316]],["title/injectables/CustomThrottlerGuard.html",[130,1.973,185,0.503]],["body/injectables/CustomThrottlerGuard.html",[0,0.06,3,0.392,4,0.339,5,0.287,8,2.529,12,2.91,14,0.507,15,1.115,19,0.704,21,0.94,22,0.035,23,0.704,24,0.635,25,0.94,26,0.856,28,0.661,30,0.569,32,0.392,49,3.811,67,0.026,68,0.026,76,1.471,81,0.94,129,2.233,130,2.91,185,0.741,186,1.485,269,1.997,351,3.811,497,2.925,498,4.595,499,4.595,500,5.111,501,5.111,502,4.595,503,4.595,504,5.111,505,3.527,506,3.527,507,3.527,508,3.527]],["title/injectables/JoiValidationPipe.html",[185,0.503,264,1.442]],["body/injectables/JoiValidationPipe.html",[0,0.058,3,0.374,4,0.323,5,0.274,14,0.484,15,1.082,19,0.889,21,1.188,22,0.035,23,0.889,24,0.802,25,1.188,26,0.817,28,0.641,30,0.543,32,0.374,37,1.418,43,1.292,56,1.418,58,2.823,67,0.025,68,0.025,79,1.719,81,0.898,176,1.558,185,0.719,186,1.418,218,2.132,264,2.063,367,2.063,480,3.197,481,3.814,482,2.415,483,2.132,487,3.197,489,3.197,490,3.164,491,2.415,492,2.415,493,2.415,509,2.793,510,3.697,511,2.793,512,5.318,513,3.367,514,3.367]],["title/injectables/JoiValidationPipe-1.html",[185,0.421,264,1.209,383,2.166]],["body/injectables/JoiValidationPipe-1.html",[0,0.072,3,0.342,4,0.295,5,0.251,14,0.442,15,1.018,19,0.837,21,1.118,22,0.035,23,1.023,24,0.755,25,1.118,26,0.747,28,0.603,30,0.497,32,0.531,37,1.295,43,1.61,56,1.295,58,2.657,67,0.024,68,0.024,76,1.343,79,1.571,81,0.82,161,1.424,176,1.424,185,0.677,186,1.295,218,1.949,223,2.376,224,2.376,262,1.571,264,1.941,325,1.742,367,1.941,475,3.023,476,1.949,480,3.009,481,3.677,482,2.207,483,2.657,484,2.207,485,3.009,486,2.207,487,3.009,488,3.96,489,3.009,490,3.023,491,2.207,492,2.207,493,2.207,510,3.48,511,2.552,515,3.077,516,3.077]],["title/injectables/LoggerMiddleware.html",[110,1.973,185,0.503]],["body/injectables/LoggerMiddleware.html",[0,0.059,3,0.382,4,0.33,5,0.28,14,0.494,15,1.095,19,0.685,21,0.915,22,0.035,23,0.685,24,0.617,25,0.915,26,0.833,27,2.173,28,0.649,30,0.554,32,0.502,46,2.343,61,3.525,67,0.025,68,0.025,110,2.858,176,1.588,185,0.728,186,1.445,269,1.943,270,3.842,324,2.461,517,2.461,518,4.514,519,4.514,520,4.74,521,4.617,522,3.432,523,4.514,524,3.432,525,3.432,526,2.847,527,2.847,528,3.432]],["title/guards/RolesGuard.html",[126,1.764,173,1.973]],["body/guards/RolesGuard.html",[0,0.052,3,0.338,4,0.291,5,0.247,14,0.436,15,1.009,19,0.829,21,1.108,22,0.035,23,0.829,24,0.748,25,1.108,26,0.737,28,0.682,30,0.49,31,1.719,32,0.338,37,1.278,38,1.922,43,1.819,46,1.278,67,0.023,68,0.023,69,1.278,79,1.549,81,1.263,126,2.354,137,1.923,174,2.354,176,1.405,185,0.671,191,2.177,193,4.228,194,2.518,195,4.574,197,3.447,198,3.656,200,2.518,201,3.447,210,2.518,211,2.518,216,2.518,335,3.228,336,2.518,529,2.518,530,3.035,531,3.035,532,4.156,533,3.035,534,3.035,535,3.035,536,3.035,537,1.405,538,3.035,539,3.035,540,3.035]],["title/classes/UpdateUserDto.html",[0,0.053,541,1.764]],["body/classes/UpdateUserDto.html",[0,0.074,2,1.995,3,0.479,4,0.414,5,0.351,12,2.73,22,0.034,28,0.749,32,0.479,67,0.029,68,0.029,249,2.441,494,2.201,496,3.091,541,2.952,542,3.576,543,4.311,544,3.576,545,3.091,546,3.091,547,4.311]],["title/classes/User.html",[0,0.053,537,1.442]],["body/classes/User.html",[0,0.08,2,2.151,3,0.517,4,0.446,5,0.379,22,0.032,32,0.517,67,0.031,68,0.031,537,2.522,548,3.855]],["title/controllers/UsersController.html",[69,1.311,549,1.973]],["body/controllers/UsersController.html",[0,0.042,3,0.27,4,0.233,5,0.198,14,0.35,15,0.862,19,0.98,21,1.23,22,0.035,23,0.921,24,0.831,25,1.23,26,1.192,28,0.706,30,0.392,32,0.27,37,1.024,67,0.02,68,0.02,69,1.024,71,1.125,74,3.11,76,1.773,80,1.744,81,1.309,183,1.744,225,2.904,248,2.017,249,2.012,251,2.923,253,2.25,273,1.54,307,2.947,314,2.017,316,3.482,326,1.54,328,1.942,330,1.942,358,2.548,374,2.947,384,2.017,399,2.017,494,2.618,541,3.075,546,2.548,549,2.25,550,2.017,551,2.947,552,2.947,553,2.017,554,2.431,555,2.431,556,2.431,557,2.017,558,3.552,559,2.431,560,2.017,561,3.552,562,2.431,563,2.431,564,2.431,565,2.017,566,2.017,567,2.431,568,2.431,569,2.431,570,2.431,571,2.431,572,2.431,573,2.431,574,2.431,575,2.431]],["title/modules/UsersModule.html",[83,1.59,91,1.59]],["body/modules/UsersModule.html",[0,0.059,3,0.386,4,0.333,5,0.283,22,0.035,28,0.774,30,0.56,32,0.386,67,0.026,68,0.026,71,2.105,83,2.322,85,1.773,86,2.322,90,2.322,91,2.982,92,2.88,93,2.199,94,2.199,96,3.262,97,2.49,168,3.773,310,3.262,330,2.837,443,3.773,549,3.212,565,2.88,576,2.88,577,2.88,578,2.88,579,3.472,580,3.472,581,3.472]],["title/injectables/UsersService.html",[185,0.503,330,1.442]],["body/injectables/UsersService.html",[0,0.046,3,0.296,4,0.256,5,0.217,14,0.383,15,0.921,19,1.016,21,1.284,22,0.035,23,0.961,24,0.866,25,1.284,26,1.321,28,0.635,30,0.43,32,0.296,56,1.121,67,0.021,68,0.021,76,1.629,81,1.357,161,2.621,183,1.91,185,0.612,186,1.121,225,2.996,249,2.148,251,3.05,253,2.403,273,2.403,326,1.687,330,1.756,494,2.598,537,2.228,541,3.083,546,2.721,551,3.147,552,3.147,553,3.147,557,3.147,560,3.147,566,2.209,582,2.209,583,2.664,584,2.664,585,2.664,586,2.664,587,2.664,588,5.09,589,2.664,590,2.664,591,2.664]],["title/coverage.html",[592,3.034]],["body/coverage.html",[0,0.086,1,1.475,5,0.19,6,1.933,7,1.933,22,0.035,24,0.419,56,0.981,67,0.019,68,0.019,69,1.724,70,1.475,72,1.933,77,1.189,110,1.475,111,1.671,124,1.319,126,1.319,130,1.475,173,2.18,185,0.843,187,1.933,192,1.933,206,1.671,212,1.475,219,1.319,220,1.933,238,1.933,246,1.475,247,1.933,262,1.189,264,1.593,325,1.319,328,1.078,330,1.078,335,2.18,338,1.671,343,1.671,344,1.671,378,5.12,448,1.933,475,2.593,476,2.593,494,1.189,495,1.933,496,2.469,497,1.933,509,1.933,517,2.469,526,2.856,529,1.933,537,1.593,541,1.319,542,1.933,548,1.933,549,1.475,550,1.933,582,1.933,592,1.671,593,2.33,594,2.33,595,2.33,596,4.095,597,2.33,598,2.33,599,4.095,600,2.33,601,4.523,602,5.651,603,5.829,604,1.933,605,2.856,606,2.469,607,1.933,608,3.443,609,3.443,610,3.752,611,1.933,612,3.443,613,3.443,614,1.933,615,1.933,616,1.933,617,2.33]],["title/dependencies.html",[86,1.91,618,2.612]],["body/dependencies.html",[22,0.036,30,0.593,31,2.079,67,0.026,68,0.026,86,1.875,119,3.046,121,2.325,123,2.633,129,2.325,138,2.633,205,3.046,240,3.382,241,2.325,324,2.633,342,3.046,483,2.325,490,2.325,544,3.046,545,2.633,619,5.498,620,3.672,621,3.672,622,3.672,623,3.672,624,3.672,625,3.672,626,3.672,627,3.672,628,3.672,629,3.672,630,3.672,631,3.672,632,3.672,633,3.672,634,3.672,635,3.672,636,3.672,637,3.672,638,3.672,639,3.672]],["title/miscellaneous/enumerations.html",[640,1.333,641,3.103]],["body/miscellaneous/enumerations.html",[14,0.651,22,0.033,67,0.03,68,0.03,174,3.04,367,2.485,537,2.485,606,3.248,640,2.312,641,3.757,642,3.757,643,5.369]],["title/miscellaneous/functions.html",[640,1.333,644,3.103]],["body/miscellaneous/functions.html",[14,0.608,21,1.127,22,0.031,23,0.844,24,0.761,25,1.127,46,2.169,61,3.263,67,0.029,68,0.029,111,3.695,269,2.395,270,3.695,517,3.033,520,4.273,521,4.273,527,3.508,615,3.508,616,4.609,640,2.159,644,3.508,645,4.229,646,4.229]],["title/index.html",[14,0.376,647,2.612,648,2.612]],["body/index.html",[4,0.312,8,2.327,22,0.035,41,2.691,67,0.024,68,0.024,241,2.055,348,2.691,404,4.068,592,2.327,649,3.245,650,3.245,651,4.349,652,3.245,653,3.245,654,3.245,655,3.245,656,3.245,657,3.245,658,4.905,659,3.245,660,3.245,661,3.245,662,5.744,663,3.245,664,3.245,665,3.245,666,5.624,667,3.245,668,3.245,669,4.349,670,3.245,671,3.245,672,3.245,673,3.245,674,4.349,675,3.245,676,3.245,677,3.245,678,4.349,679,4.349,680,3.245,681,3.245,682,3.245,683,3.245,684,3.245,685,2.691,686,3.245,687,3.245,688,3.245,689,3.245,690,3.245,691,3.245,692,3.245,693,3.245,694,3.245,695,3.245,696,3.245,697,3.245,698,3.245,699,3.245,700,3.245,701,3.245]],["title/modules.html",[85,2.16]],["body/modules.html",[22,0.03,67,0.03,68,0.03,84,2.854,85,2.301,90,2.301,91,2.301,685,4.737,702,5.71,703,5.71,704,5.71]],["title/overview.html",[705,3.509]],["body/overview.html",[2,1.639,22,0.034,67,0.026,68,0.026,71,1.639,77,2.614,84,3.768,85,1.808,86,2.352,87,2.937,88,2.937,89,2.937,90,2.942,91,2.942,92,2.917,93,2.242,94,2.242,186,1.491,191,2.539,328,2.716,330,2.716,439,2.937,440,2.937,441,2.937,465,2.937,466,3.821,576,2.937,577,2.937,578,2.937,705,2.937,706,3.541,707,3.541]],["title/miscellaneous/variables.html",[640,1.333,708,3.103]],["body/miscellaneous/variables.html",[5,0.42,14,0.294,22,0.036,23,0.407,24,0.762,43,1.75,44,2.586,46,1.313,67,0.017,68,0.017,76,1.211,81,1.008,137,1.959,174,1.156,198,2.236,206,2.236,208,1.694,212,1.974,223,1.156,224,1.156,269,2.582,276,1.694,325,1.766,335,3.166,338,2.236,343,2.236,344,2.236,367,2.536,405,3.137,456,4.546,475,1.293,476,1.974,484,1.464,485,2.236,486,1.464,537,1.443,545,2.236,604,1.694,605,1.694,606,1.464,607,1.694,610,1.694,611,2.586,614,2.586,640,1.042,642,2.586,708,1.694,709,4.233,710,2.042,711,2.042,712,3.118,713,2.042,714,4.559,715,3.782,716,2.042,717,3.782,718,3.782,719,3.782,720,2.042,721,3.782,722,4.559,723,3.118,724,3.118,725,3.118,726,3.118,727,2.042,728,2.042,729,3.118,730,2.042,731,2.042,732,2.042,733,3.118,734,2.042,735,2.042,736,2.042,737,2.042,738,2.042,739,2.042,740,2.042,741,2.042,742,2.042,743,2.042,744,2.042,745,2.042,746,2.042,747,3.118,748,3.118,749,2.042,750,2.042,751,2.042,752,2.042,753,2.042]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":378,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["0.1.13",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":383,"title":{"injectables/JoiValidationPipe-1.html":{}},"body":{"controllers/CatsController.html":{}}}],["1.0.2",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["100",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":407,"title":{},"body":{"controllers/CatsController.html":{}}}],["17",{"_index":293,"title":{},"body":{"controllers/CatsController.html":{}}}],["17.5.0",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":465,"title":{},"body":{"injectables/CatsService.html":{},"overview.html":{}}}],["2.0.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["2.1.2",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":466,"title":{},"body":{"injectables/CatsService.html":{},"overview.html":{}}}],["3.0.2",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":291,"title":{},"body":{"controllers/CatsController.html":{}}}],["302",{"_index":282,"title":{},"body":{"controllers/CatsController.html":{}}}],["5",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["50",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["5000000",{"_index":422,"title":{},"body":{"controllers/CatsController.html":{}}}],["5pm",{"_index":411,"title":{},"body":{"controllers/CatsController.html":{}}}],["6",{"_index":707,"title":{},"body":{"overview.html":{}}}],["6.13.0",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["60000",{"_index":369,"title":{},"body":{"controllers/CatsController.html":{}}}],["7",{"_index":706,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["817178920",{"_index":382,"title":{},"body":{"controllers/CatsController.html":{}}}],["9",{"_index":292,"title":{},"body":{"controllers/CatsController.html":{}}}],["9am",{"_index":410,"title":{},"body":{"controllers/CatsController.html":{}}}],["accepted",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":588,"title":{},"body":{"injectables/UsersService.html":{}}}],["adds",{"_index":589,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin",{"_index":643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admin.example.com",{"_index":353,"title":{},"body":{"controllers/CatsController.html":{}}}],["age",{"_index":223,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/variables.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["allowedmimes",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedmimes.includes(file.mimetype",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allownull",{"_index":239,"title":{},"body":{"classes/Cat.html":{}}}],["allownull(false",{"_index":245,"title":{},"body":{"classes/Cat.html":{}}}],["allownull(undefined)@column",{"_index":226,"title":{},"body":{"classes/Cat.html":{}}}],["amazing",{"_index":686,"title":{},"body":{"index.html":{}}}],["anyfilesinterceptor",{"_index":340,"title":{},"body":{"controllers/CatsController.html":{}}}],["app",{"_index":664,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":70,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":429,"title":{},"body":{"controllers/CatsController.html":{}}}],["application/pdf",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.ms",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformats",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":657,"title":{},"body":{"index.html":{}}}],["apply(loggermiddleware",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":77,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":481,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["argumentshost",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":250,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["attachment",{"_index":431,"title":{},"body":{"controllers/CatsController.html":{}}}],["attachmentfilter",{"_index":611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["attributes",{"_index":472,"title":{},"body":{"injectables/CatsService.html":{}}}],["auth",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":124,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["author",{"_index":694,"title":{},"body":{"index.html":{}}}],["auto",{"_index":359,"title":{},"body":{"controllers/CatsController.html":{}}}],["autoincrement",{"_index":234,"title":{},"body":{"classes/Cat.html":{}}}],["autoloadmodels",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["await",{"_index":462,"title":{},"body":{"injectables/CatsService.html":{}}}],["backers",{"_index":687,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":482,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["badrequestexception('only",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badrequestexception('validation",{"_index":492,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["baseexceptionfilter",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["behind",{"_index":498,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["between",{"_index":409,"title":{},"body":{"controllers/CatsController.html":{}}}],["body",{"_index":307,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["breed",{"_index":224,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":704,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":702,"title":{},"body":{"modules.html":{}}}],["building",{"_index":652,"title":{},"body":{"index.html":{}}}],["cache",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["cachekey",{"_index":308,"title":{},"body":{"controllers/CatsController.html":{}}}],["cachemodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":309,"title":{},"body":{"controllers/CatsController.html":{}}}],["canactivate",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["cat",{"_index":219,"title":{"classes/Cat.html":{}},"body":{"classes/Cat.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat')@column",{"_index":230,"title":{},"body":{"classes/Cat.html":{}}}],["cat.dto",{"_index":327,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cat.dto.ts",{"_index":476,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cat.dto.ts:10",{"_index":479,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:11",{"_index":477,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:12",{"_index":478,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:22",{"_index":515,"title":{},"body":{"injectables/JoiValidationPipe-1.html":{}}}],["cat.dto.ts:25",{"_index":516,"title":{},"body":{"injectables/JoiValidationPipe-1.html":{}}}],["catch",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CatsService.html":{}}}],["catch(exception",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catmodel",{"_index":451,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":445,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.model",{"_index":446,"title":{},"body":{"modules/CatsModule.html":{},"injectables/CatsService.html":{}}}],["cats.service",{"_index":329,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":246,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catsmodule",{"_index":90,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":328,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["cb",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(new",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb(null",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["certain",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Cat.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":439,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":440,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":441,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":576,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":577,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":578,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":235,"title":{},"body":{"classes/Cat.html":{}}}],["comment",{"_index":237,"title":{},"body":{"classes/Cat.html":{}}}],["comment('id",{"_index":244,"title":{},"body":{"classes/Cat.html":{}}}],["common/filters/all",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["common/guards/auth.guard",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["common/guards/role.guard",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["common/guards/throttler.guard",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["common/middlewares/logger.middleware",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["compare",{"_index":536,"title":{},"body":{"guards/RolesGuard.html":{}}}],["configmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('cron",{"_index":412,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log('log",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["console.log('request",{"_index":524,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log('validate",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(`request",{"_index":528,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(e.message",{"_index":468,"title":{},"body":{"injectables/CatsService.html":{}}}],["console.log(name",{"_index":365,"title":{},"body":{"controllers/CatsController.html":{}}}],["const",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["constructor(catmodel",{"_index":449,"title":{},"body":{"injectables/CatsService.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(schema",{"_index":511,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["consumer",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":428,"title":{},"body":{"controllers/CatsController.html":{}}}],["context",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["control",{"_index":303,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":69,"title":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('cats",{"_index":355,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('users",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["cookies",{"_index":338,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookies('name",{"_index":363,"title":{},"body":{"controllers/CatsController.html":{}}}],["coverage",{"_index":592,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":249,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":399,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["create(cat",{"_index":452,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":261,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(createuserdto",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcatdto",{"_index":262,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"coverage.html":{}}}],["createcatschema",{"_index":325,"title":{},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createparamdecorator",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreadstream",{"_index":346,"title":{},"body":{"controllers/CatsController.html":{}}}],["createreadstream(join(process.cwd",{"_index":425,"title":{},"body":{"controllers/CatsController.html":{}}}],["createuserdto",{"_index":494,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":337,"title":{},"body":{"controllers/CatsController.html":{}}}],["cron('0",{"_index":290,"title":{},"body":{"controllers/CatsController.html":{}}}],["csrf",{"_index":435,"title":{},"body":{"controllers/CatsController.html":{}}}],["csurf",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["csvfilter",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ctx",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["customthrottlerguard",{"_index":130,"title":{"injectables/CustomThrottlerGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomThrottlerGuard.html":{},"coverage.html":{}}}],["data",{"_index":405,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":415,"title":{},"body":{"controllers/CatsController.html":{}}}],["date().toisostring",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date.now",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":456,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CustomThrottlerGuard.html":{},"index.html":{}}}],["destination",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":665,"title":{},"body":{"index.html":{}}}],["development.env",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["dialect",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["disposition",{"_index":430,"title":{},"body":{"controllers/CatsController.html":{}}}],["documentation",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":326,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/validation.pipe",{"_index":332,"title":{},"body":{"controllers/CatsController.html":{}}}],["e",{"_index":467,"title":{},"body":{"injectables/CatsService.html":{}}}],["e2e",{"_index":675,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":653,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":641,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["excel",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exceptions.filter",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:9",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exclude",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["executed",{"_index":414,"title":{},"body":{"controllers/CatsController.html":{}}}],["executioncontext",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":443,"title":{},"body":{"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":324,"title":{},"body":{"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":299,"title":{},"body":{"controllers/CatsController.html":{}}}],["extends",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Cat.html":{},"injectables/CustomThrottlerGuard.html":{},"classes/UpdateUserDto.html":{}}}],["failed",{"_index":493,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["false",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["falsy",{"_index":379,"title":{},"body":{"controllers/CatsController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filefilter",{"_index":419,"title":{},"body":{"controllers/CatsController.html":{}}}],["fileinterceptor",{"_index":341,"title":{},"body":{"controllers/CatsController.html":{}}}],["fileinterceptor('file",{"_index":417,"title":{},"body":{"controllers/CatsController.html":{}}}],["filename",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filename=\"package.json",{"_index":432,"title":{},"body":{"controllers/CatsController.html":{}}}],["filepath",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filesize",{"_index":421,"title":{},"body":{"controllers/CatsController.html":{}}}],["filestorage",{"_index":343,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":251,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallv2",{"_index":252,"title":{},"body":{"controllers/CatsController.html":{}}}],["findallv2(name",{"_index":268,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":253,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":384,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":273,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["forroutes",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes('cats",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["forwardref",{"_index":310,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["framework",{"_index":651,"title":{},"body":{"index.html":{}}}],["fs",{"_index":347,"title":{},"body":{"controllers/CatsController.html":{}}}],["function",{"_index":526,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functional",{"_index":525,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["functions",{"_index":644,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatecsrf",{"_index":254,"title":{},"body":{"controllers/CatsController.html":{}}}],["generatecsrf(req",{"_index":277,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id",{"_index":374,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@roles(role.admin)@cachettl(undefined",{"_index":274,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('ab*cd",{"_index":386,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('ab*cd')@httpcode(500)@header('cache",{"_index":302,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('dl/file",{"_index":287,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs",{"_index":393,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs')@redirect('https://docs.nestjs.com",{"_index":281,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('get/csrf",{"_index":434,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('get/csrf')@cachettl(undefined",{"_index":278,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('self",{"_index":296,"title":{},"body":{"controllers/CatsController.html":{}}}],["get()@public()@skipthrottle",{"_index":266,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs",{"_index":255,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(@query('version",{"_index":395,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(version",{"_index":280,"title":{},"body":{"controllers/CatsController.html":{}}}],["getfile",{"_index":256,"title":{},"body":{"controllers/CatsController.html":{}}}],["getfile(@res",{"_index":424,"title":{},"body":{"controllers/CatsController.html":{}}}],["getfile(res",{"_index":286,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":647,"title":{"index.html":{}},"body":{}}],["gettracker",{"_index":502,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["gettracker(req",{"_index":503,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["gif",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["grow",{"_index":682,"title":{},"body":{"index.html":{}}}],["guard",{"_index":173,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["guards",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":351,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CustomThrottlerGuard.html":{}}}],["handlecron",{"_index":257,"title":{},"body":{"controllers/CatsController.html":{}}}],["handler",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["handleurself",{"_index":258,"title":{},"body":{"controllers/CatsController.html":{}}}],["handleurself(@res",{"_index":402,"title":{},"body":{"controllers/CatsController.html":{}}}],["handleurself(res",{"_index":295,"title":{},"body":{"controllers/CatsController.html":{}}}],["header",{"_index":311,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":388,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('test",{"_index":390,"title":{},"body":{"controllers/CatsController.html":{}}}],["hello",{"_index":189,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["host",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["host.switchtohttp",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":312,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(500",{"_index":387,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{}}}],["httponly",{"_index":370,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://docs.nestjs.com/v5",{"_index":396,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://github.com/nestjs/nest/issues/6870#issuecomment",{"_index":381,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://nestjs.com",{"_index":698,"title":{},"body":{"index.html":{}}}],["https://www.freeformatter.com/mime",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{}}}],["id",{"_index":225,"title":{},"body":{"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["image/gif",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/jpeg",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/pjpeg",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagefilter",{"_index":344,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implemented",{"_index":470,"title":{},"body":{"injectables/CatsService.html":{}}}],["implements",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index()@allownull(undefined)@column",{"_index":232,"title":{},"body":{"classes/Cat.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":313,"title":{},"body":{"controllers/CatsController.html":{}}}],["injectable",{"_index":185,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":457,"title":{},"body":{"injectables/CatsService.html":{}}}],["injectmodel(cat",{"_index":458,"title":{},"body":{"injectables/CatsService.html":{}}}],["installation",{"_index":661,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":663,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ip",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CustomThrottlerGuard.html":{}}}],["is_public",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["ispublic",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":380,"title":{},"body":{"controllers/CatsController.html":{}}}],["items",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["jane",{"_index":464,"title":{},"body":{"injectables/CatsService.html":{}}}],["job",{"_index":413,"title":{},"body":{"controllers/CatsController.html":{}}}],["joi",{"_index":483,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"dependencies.html":{}}}],["joi.number().required",{"_index":486,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/variables.html":{}}}],["joi.object",{"_index":484,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/variables.html":{}}}],["joi.objectschema",{"_index":488,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["joi.string().required",{"_index":485,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":348,"title":{},"body":{"controllers/CatsController.html":{},"index.html":{}}}],["joivalidationpipe",{"_index":264,"title":{"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"coverage.html":{}}}],["joivalidationpipe(createcatschema",{"_index":398,"title":{},"body":{"controllers/CatsController.html":{}}}],["jpeg",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":695,"title":{},"body":{"index.html":{}}}],["level",{"_index":532,"title":{},"body":{"guards/RolesGuard.html":{}}}],["license",{"_index":701,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":679,"title":{},"body":{"index.html":{}}}],["limit",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["limits",{"_index":420,"title":{},"body":{"controllers/CatsController.html":{}}}],["list",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list.html",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":527,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["loggermiddleware",{"_index":110,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["logging",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["manager",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["maxage",{"_index":368,"title":{},"body":{"controllers/CatsController.html":{}}}],["maximum",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"dependencies.html":{}}}],["method",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/CatsService.html":{},"guards/RolesGuard.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["mime",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minutes",{"_index":408,"title":{},"body":{"controllers/CatsController.html":{}}}],["miscellaneous",{"_index":640,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":678,"title":{},"body":{"index.html":{}}}],["mode",{"_index":669,"title":{},"body":{"index.html":{}}}],["model",{"_index":221,"title":{},"body":{"classes/Cat.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":691,"title":{},"body":{"index.html":{}}}],["multer.diskstorage",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":696,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["negative",{"_index":377,"title":{},"body":{"controllers/CatsController.html":{}}}],["nest",{"_index":658,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":700,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":544,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":342,"title":{},"body":{"controllers/CatsController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"dependencies.html":{}}}],["nestjs/sequelize",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CustomThrottlerGuard.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":523,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":520,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":521,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":650,"title":{},"body":{"index.html":{}}}],["none",{"_index":389,"title":{},"body":{"controllers/CatsController.html":{}}}],["none')@header('test",{"_index":304,"title":{},"body":{"controllers/CatsController.html":{}}}],["npm",{"_index":662,"title":{},"body":{"index.html":{}}}],["number",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/UsersService.html":{}}}],["objectschema",{"_index":512,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["observable",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":680,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":705,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":392,"title":{},"body":{"controllers/CatsController.html":{}}}],["package",{"_index":618,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":426,"title":{},"body":{"controllers/CatsController.html":{}}}],["param",{"_index":314,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":315,"title":{},"body":{"controllers/CatsController.html":{}}}],["parser",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":543,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":547,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passthrough",{"_index":364,"title":{},"body":{"controllers/CatsController.html":{}}}],["password",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["path.extname(file.originalname",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["pipetransform",{"_index":480,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["please",{"_index":689,"title":{},"body":{"index.html":{}}}],["png",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":316,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["post('upload",{"_index":416,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":300,"title":{},"body":{"controllers/CatsController.html":{}}}],["post()@usepipes(new",{"_index":263,"title":{},"body":{"controllers/CatsController.html":{}}}],["postgres",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":248,"title":{},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{}}}],["primarykey",{"_index":236,"title":{},"body":{"classes/Cat.html":{}}}],["primarykey()@autoincrement()@comment('id",{"_index":229,"title":{},"body":{"classes/Cat.html":{}}}],["private",{"_index":358,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{}}}],["process.env.db_database",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_port",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":671,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":649,"title":{},"body":{"index.html":{}}}],["project",{"_index":681,"title":{},"body":{"index.html":{}}}],["promise",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["properties",{"_index":222,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{}}}],["protected",{"_index":501,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["provide",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{}}}],["proxy",{"_index":499,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["public",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":376,"title":{},"body":{"controllers/CatsController.html":{}}}],["query",{"_index":317,"title":{},"body":{"controllers/CatsController.html":{}}}],["raw",{"_index":473,"title":{},"body":{"injectables/CatsService.html":{}}}],["read",{"_index":690,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/CatsService.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":504,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["redirect",{"_index":318,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('https://docs.nestjs.com",{"_index":394,"title":{},"body":{"controllers/CatsController.html":{}}}],["reflect",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["remove",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":591,"title":{},"body":{"injectables/UsersService.html":{}}}],["replaced",{"_index":533,"title":{},"body":{"guards/RolesGuard.html":{}}}],["repository",{"_index":660,"title":{},"body":{"index.html":{}}}],["req",{"_index":269,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["req.csrftoken",{"_index":436,"title":{},"body":{"controllers/CatsController.html":{}}}],["req.ip",{"_index":508,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["req.ips.length",{"_index":506,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["req.ips[0",{"_index":507,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["request",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request.hostname",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.ip",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.method",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.path",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.signedcookies",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.signedcookies?.[data",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user?.role",{"_index":538,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requestmethod",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.get",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.post",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["res",{"_index":270,"title":{},"body":{"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["res.cookie('name",{"_index":366,"title":{},"body":{"controllers/CatsController.html":{}}}],["res.cookie('xsrf",{"_index":437,"title":{},"body":{"controllers/CatsController.html":{}}}],["res.set",{"_index":427,"title":{},"body":{"controllers/CatsController.html":{}}}],["res.status(500).send",{"_index":403,"title":{},"body":{"controllers/CatsController.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{}}}],["response",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["responsebody",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":461,"title":{},"body":{"injectables/CatsService.html":{}}}],["results",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.user",{"_index":357,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles",{"_index":335,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":356,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.some((role",{"_index":539,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":126,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["route",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{}}}],["run",{"_index":666,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":654,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":487,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["seconds",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["secure",{"_index":371,"title":{},"body":{"controllers/CatsController.html":{}}}],["sequelize",{"_index":240,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{}}}],["sequelizemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{}}}],["sequelizemodule.forfeature([cat",{"_index":447,"title":{},"body":{"modules/CatsModule.html":{}}}],["sequelizemodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":655,"title":{},"body":{"index.html":{}}}],["set",{"_index":375,"title":{},"body":{"controllers/CatsController.html":{}}}],["setmetadata(is_public",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":656,"title":{},"body":{"index.html":{}}}],["signed",{"_index":372,"title":{},"body":{"controllers/CatsController.html":{}}}],["situations",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skip",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["skipthrottle",{"_index":349,"title":{},"body":{"controllers/CatsController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":352,"title":{},"body":{"controllers/CatsController.html":{}}}],["specify",{"_index":535,"title":{},"body":{"guards/RolesGuard.html":{}}}],["sponsors",{"_index":684,"title":{},"body":{"index.html":{}}}],["src/.../cookies.decorator.ts",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":642,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../upload.ts",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.decorator.ts",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:88",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cats/cats.controller.ts",{"_index":247,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:104",{"_index":283,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:112",{"_index":265,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:118",{"_index":297,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:124",{"_index":294,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:136",{"_index":301,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:141",{"_index":288,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:152",{"_index":279,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:61",{"_index":267,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:68",{"_index":272,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:88",{"_index":275,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:97",{"_index":306,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.model.ts",{"_index":220,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["src/cats/cats.model.ts:18",{"_index":231,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cats.model.ts:23",{"_index":233,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cats.model.ts:27",{"_index":227,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cats.model.ts:31",{"_index":228,"title":{},"body":{"classes/Cat.html":{}}}],["src/cats/cats.module",{"_index":581,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/cats/cats.module.ts",{"_index":442,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/cats/cats.service.ts",{"_index":448,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:15",{"_index":453,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:28",{"_index":455,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:33",{"_index":454,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/cats.service.ts:9",{"_index":450,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/cats/dto/create",{"_index":475,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cats/dto/validation.pipe.ts",{"_index":509,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/cats/dto/validation.pipe.ts:10",{"_index":513,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/cats/dto/validation.pipe.ts:13",{"_index":514,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/common/decorators/cookies.decorator",{"_index":339,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/common/decorators/cookies.decorator.ts",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/public.decorator",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/CatsController.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/roles.decorator",{"_index":336,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":606,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/users.decorator.ts",{"_index":607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/guards/auth.guard",{"_index":334,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/common/guards/auth.guard.ts",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/common/guards/auth.guard.ts:12",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guards/auth.guard.ts:15",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/guards/role.guard",{"_index":333,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/common/guards/role.guard.ts",{"_index":529,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/role.guard.ts:6",{"_index":530,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/role.guard.ts:9",{"_index":531,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/throttler.guard.ts",{"_index":497,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{},"coverage.html":{}}}],["src/common/guards/throttler.guard.ts:9",{"_index":505,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["src/common/middlewares/logger.middleware.ts",{"_index":517,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/middlewares/logger.middleware.ts:6",{"_index":522,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/utils/upload",{"_index":345,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/common/utils/upload.ts",{"_index":610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":495,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":542,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":548,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:23",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:33",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":444,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/users/users.module.ts",{"_index":579,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":331,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/users/users.service.ts",{"_index":582,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":584,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":585,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":587,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":586,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":583,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":667,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":670,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":672,"title":{},"body":{"index.html":{}}}],["started",{"_index":648,"title":{"index.html":{}},"body":{}}],["starter",{"_index":659,"title":{},"body":{"index.html":{}}}],["statements",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":692,"title":{},"body":{"index.html":{}}}],["storage",{"_index":418,"title":{},"body":{"controllers/CatsController.html":{}}}],["streamablefile",{"_index":289,"title":{},"body":{"controllers/CatsController.html":{}}}],["streamablefile(file",{"_index":433,"title":{},"body":{"controllers/CatsController.html":{}}}],["string",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["super.catch(exception",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["support",{"_index":685,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":703,"title":{},"body":{"modules.html":{}}}],["table",{"_index":238,"title":{},"body":{"classes/Cat.html":{},"coverage.html":{}}}],["tablename",{"_index":243,"title":{},"body":{"classes/Cat.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":404,"title":{},"body":{"controllers/CatsController.html":{},"index.html":{}}}],["test:covsupport",{"_index":677,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":676,"title":{},"body":{"index.html":{}}}],["tests",{"_index":674,"title":{},"body":{"index.html":{}}}],["text/csv",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thanks",{"_index":683,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["this.catmodel.create",{"_index":463,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catmodel.findall",{"_index":471,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats",{"_index":474,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":469,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":400,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":360,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findone(id",{"_index":385,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.httpadapterhost",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.reflector.getallandoverride(is_public",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(roles",{"_index":534,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.schema.validate(value",{"_index":491,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["this.usersservice.create(createuserdto",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttle",{"_index":350,"title":{},"body":{"controllers/CatsController.html":{}}}],["throttle(20",{"_index":362,"title":{},"body":{"controllers/CatsController.html":{}}}],["throttler",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlerguard",{"_index":500,"title":{},"body":{"injectables/CustomThrottlerGuard.html":{}}}],["throttlermodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["thus",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["times",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["timestamp",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timestamps",{"_index":242,"title":{},"body":{"classes/Cat.html":{}}}],["token",{"_index":438,"title":{},"body":{"controllers/CatsController.html":{}}}],["touch",{"_index":693,"title":{},"body":{"index.html":{}}}],["transform",{"_index":510,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["transform(value",{"_index":489,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{}}}],["true",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":460,"title":{},"body":{"injectables/CatsService.html":{}}}],["ttl",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":699,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/CustomThrottlerGuard.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":459,"title":{},"body":{"injectables/CatsService.html":{}}}],["types",{"_index":545,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":241,"title":{},"body":{"classes/Cat.html":{},"injectables/CatsService.html":{},"dependencies.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unhandled",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unit",{"_index":673,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":276,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":590,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":541,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uploadedfile",{"_index":319,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadedfiles",{"_index":320,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile",{"_index":259,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile(@uploadedfile",{"_index":423,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploadfile(file",{"_index":298,"title":{},"body":{"controllers/CatsController.html":{}}}],["uploads",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":285,"title":{},"body":{"controllers/CatsController.html":{}}}],["urself",{"_index":401,"title":{},"body":{"controllers/CatsController.html":{}}}],["use",{"_index":518,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":519,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":321,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors",{"_index":322,"title":{},"body":{"controllers/CatsController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":354,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes",{"_index":323,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipes(new",{"_index":397,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":537,"title":{"classes/User.html":{}},"body":{"guards/RolesGuard.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":546,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":496,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.roles.includes(role",{"_index":540,"title":{},"body":{"guards/RolesGuard.html":{}}}],["username",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":580,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":549,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":91,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":330,"title":{"injectables/UsersService.html":{}},"body":{"controllers/CatsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":391,"title":{},"body":{"controllers/CatsController.html":{}}}],["v2",{"_index":373,"title":{},"body":{"controllers/CatsController.html":{}}}],["validate",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["value",{"_index":367,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/JoiValidationPipe.html":{},"injectables/JoiValidationPipe-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valuue",{"_index":305,"title":{},"body":{"controllers/CatsController.html":{}}}],["variable",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":708,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":284,"title":{},"body":{"controllers/CatsController.html":{}}}],["version('2",{"_index":361,"title":{},"body":{"controllers/CatsController.html":{}}}],["version('2')@get()@throttle(20",{"_index":271,"title":{},"body":{"controllers/CatsController.html":{}}}],["void",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":668,"title":{},"body":{"index.html":{}}}],["website",{"_index":697,"title":{},"body":{"index.html":{}}}],["wildcard",{"_index":260,"title":{},"body":{"controllers/CatsController.html":{}}}],["world",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["wqe",{"_index":406,"title":{},"body":{"controllers/CatsController.html":{}}}],["you'd",{"_index":688,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/all-exceptions.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to catch all unhandled exception\n\n            \n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/all-exceptions.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n/**\n * Class to catch all unhandled exception\n */\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n\n    if (!(exception instanceof HttpException)) {\n      // Unhandled exception\n      const ctx = host.switchToHttp();\n      const request = ctx.getRequest();\n      const log = {\n        ip: request.ip,\n        from: request.hostname,\n        path: request.path,\n        method: request.method,\n        timestamp: new Date().toISOString(),\n        error: exception,\n      };\n      console.log('log error', log);\n      // for custom response\n      // const { httpAdapter } = this.httpAdapterHost;\n      // httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n    }\n    super.catch(exception, host);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheInterceptor,\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { CatsModule } from './cats/cats.module';\nimport {\n  LoggerMiddleware,\n  logger,\n} from './common/middlewares/logger.middleware';\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\nimport { AllExceptionsFilter } from './common/filters/all-exceptions.filter';\nimport { ConfigModule } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { AuthGuard } from './common/guards/auth.guard';\nimport { RolesGuard } from './common/guards/role.guard';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { CustomThrottlerGuard } from './common/guards/throttler.guard';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['.development.env', '.env'],\n      isGlobal: true,\n      cache: true,\n    }),\n    SequelizeModule.forRoot({\n      dialect: 'postgres',\n      host: process.env.DB_HOST,\n      port: +process.env.DB_PORT,\n      username: process.env.DB_USER,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      autoLoadModels: true,\n      logging: false,\n    }),\n    CacheModule.register({\n      ttl: 5, // seconds\n      max: 10, // maximum number of items in cache\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot({\n      ttl: 60, // 60 seconds\n      limit: 10, // 10 times\n    }),\n    ScheduleModule.forRoot(),\n    UsersModule,\n    CatsModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // global exception handler\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n    // global cache request\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n    // global auth guard\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    // global role guard\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n    // global throttler guard\n    {\n      provide: APP_GUARD,\n      useClass: CustomThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware, logger)\n      .exclude(\n        { path: 'cats', method: RequestMethod.GET },\n        // { path: 'cats', method: RequestMethod.POST },\n        // 'cats/(.*)',\n      )\n      .forRoutes('cats', 'users');\n    // .forRoutes({ path: 'cats', method: RequestMethod.GET });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { IS_PUBLIC } from 'src/common/decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    // if public route skip validate\n    if (isPublic) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    // validate request\n    console.log('validate request');\n    // throw new UnauthorizedException();\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cat.html":{"url":"classes/Cat.html","title":"class - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()@AutoIncrement()@Comment('id of cat')@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@AllowNull(undefined)@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AutoIncrement,\n  Column,\n  Model,\n  PrimaryKey,\n  Comment,\n  Table,\n  AllowNull,\n  Index,\n} from 'sequelize-typescript';\n\n@Table({ timestamps: true, tableName: 'cats' })\nexport class Cat extends Model {\n  @PrimaryKey\n  @AutoIncrement\n  @Comment('id of cat')\n  @Column\n  id: number;\n\n  @Index\n  @AllowNull(false)\n  @Column\n  name: string;\n\n  @AllowNull(false)\n  @Column\n  age: number;\n\n  @AllowNull(false)\n  @Column\n  breed: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findAllV2\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                generateCsrf\n                            \n                            \n                                getDocs\n                            \n                            \n                                getFile\n                            \n                            \n                                handleCron\n                            \n                            \n                                handleUrself\n                            \n                            \n                                uploadFile\n                            \n                            \n                                wildcard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new JoiValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@SkipThrottle()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllV2\n                        \n                    \n                \n            \n            \n                \nfindAllV2(name: string, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('2')@Get()@Throttle(20, 60)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Roles(Role.Admin)@CacheTTL(undefined)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCsrf\n                        \n                    \n                \n            \n            \n                \ngenerateCsrf(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get/csrf')@CacheTTL(undefined)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDocs\n                        \n                    \n                \n            \n            \n                \ngetDocs(version)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://docs.nestjs.com', 302)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dl/file')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     StreamableFile\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleCron\n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('0 */30 9-17 * * *')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUrself\n                        \n                    \n                \n            \n            \n                \nhandleUrself(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('self')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Express.Multer.File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wildcard\n                        \n                    \n                \n            \n            \n                \nwildcard()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ab*cd')@HttpCode(500)@Header('Cache-Control', 'none')@Header('test', 'valuue')\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  CacheInterceptor,\n  CacheKey,\n  CacheTTL,\n  Controller,\n  forwardRef,\n  Get,\n  Header,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Param,\n  ParseIntPipe,\n  Post,\n  Query,\n  Redirect,\n  Req,\n  Res,\n  StreamableFile,\n  UploadedFile,\n  UploadedFiles,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  Version,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { CreateCatDto, createCatSchema } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { UsersService } from 'src/users/users.service';\nimport { JoiValidationPipe } from './dto/validation.pipe';\nimport { RolesGuard } from 'src/common/guards/role.guard';\nimport { AuthGuard } from 'src/common/guards/auth.guard';\nimport { Role, Roles } from 'src/common/decorators/roles.decorator';\nimport { Cron } from '@nestjs/schedule';\nimport { Cookies } from 'src/common/decorators/cookies.decorator';\nimport { AnyFilesInterceptor, FileInterceptor } from '@nestjs/platform-express';\nimport { fileStorage, imageFilter } from 'src/common/utils/upload';\nimport { createReadStream } from 'fs';\nimport { join } from 'path';\nimport { Public } from 'src/common/decorators/public.decorator';\nimport { SkipThrottle, Throttle } from '@nestjs/throttler';\n\n// handle specific host\n// @Controller({ host: 'admin.example.com' })\n@UseInterceptors(CacheInterceptor)\n@Controller('cats')\n@Roles(Role.Admin, Role.User)\nexport class CatsController {\n  constructor(\n    private catsService: CatsService,\n    private UsersService: UsersService,\n  ) {}\n\n  @Get()\n  @Public()\n  @SkipThrottle()\n  // will auto resolve the promise\n  async findAll(): Promise {\n    return this.catsService.findAll();\n  }\n\n  @Version('2')\n  @Get()\n  @Throttle(20, 60)\n  findAllV2(\n    @Cookies('name') name: string,\n    @Req() req: Request,\n    @Res({ passthrough: true }) res: Response,\n  ): string {\n    console.log(name);\n    res.cookie('name', 'value', {\n      maxAge: 60000,\n      httpOnly: true,\n      secure: true,\n      signed: true,\n    });\n    return 'this is v2';\n  }\n\n  @Get(':id')\n  @Roles(Role.Admin)\n  // set no cache, put negative because 0 get falsy value (issue)\n  // https://github.com/nestjs/nest/issues/6870#issuecomment-817178920\n  @CacheTTL(-1)\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.catsService.findOne(id);\n  }\n\n  // wildcard path\n  @Get('ab*cd')\n  @HttpCode(500)\n  @Header('Cache-Control', 'none')\n  @Header('test', 'valuue')\n  wildcard() {\n    return 'This route uses a wildcard';\n  }\n\n  // redirect, can overwrite by return value\n  @Get('docs')\n  @Redirect('https://docs.nestjs.com', 302)\n  getDocs(@Query('version') version) {\n    if (version && version === '5') {\n      return { url: 'https://docs.nestjs.com/v5/' };\n    }\n  }\n\n  @Post()\n  @UsePipes(new JoiValidationPipe(createCatSchema))\n  create(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n  }\n\n  // handle response urself\n  @Get('self')\n  handleUrself(@Res() res: Response): void {\n    res.status(500).send({ test: 'data', wqe: 123 });\n  }\n\n  // every 30 minutes between 9am and 5pm\n  @Cron('0 */30 9-17 * * *')\n  handleCron() {\n    console.log('cron job executed', new Date());\n  }\n\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: fileStorage(''),\n      fileFilter: imageFilter,\n      limits: { fileSize: 5000000 },\n    }),\n  )\n  uploadFile(@UploadedFile() file: Express.Multer.File) {\n    return file;\n  }\n\n  @Get('dl/file')\n  getFile(@Res({ passthrough: true }) res: Response): StreamableFile {\n    const file = createReadStream(join(process.cwd(), 'package.json'));\n    res.set({\n      'Content-Type': 'application/json',\n      'Content-Disposition': 'attachment; filename=\"package.json\"',\n    });\n    return new StreamableFile(file);\n  }\n\n  @Get('get/csrf')\n  @CacheTTL(-1)\n  generateCsrf(\n    @Req() req: Request,\n    @Res({ passthrough: true }) res: Response,\n  ): string {\n    const csrf = req.csrfToken();\n    res.cookie('XSRF-TOKEN', req.csrfToken());\n    return csrf;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { UsersModule } from 'src/users/users.module';\nimport { CatsController } from './cats.controller';\nimport { Cat } from './cats.model';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService],\n  imports: [forwardRef(() => UsersModule), SequelizeModule.forFeature([Cat])],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catModel)\n                    \n                \n                        \n                            \n                                Defined in src/cats/cats.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(cat: CreateCatDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/cats/cats.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/sequelize';\nimport { Sequelize } from 'sequelize-typescript';\nimport { Cat } from './cats.model';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats = [];\n\n  constructor(\n    @InjectModel(Cat)\n    private catModel: typeof Cat,\n  ) {}\n  async create(cat: CreateCatDto) {\n    // try {\n    //   const result = await this.catModel.create({\n    //     name: 'Jane',\n    //     age: 2,\n    //     breed: '3',\n    //   });\n    // } catch (e) {\n    //   console.log(e.message);\n    // }\n    this.cats.push(cat);\n  }\n\n  findOne(id: number) {\n    return `${id} Method not implemented.`;\n    this.catModel.findAll();\n  }\n\n  async findAll(): Promise {\n    // const cats = await this.catModel.findAll({\n    //   attributes: ['id', 'name', 'age'],\n    //   raw: true,\n    // });\n    return this.cats;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cats/dto/create-cat.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\nimport * as Joi from 'joi';\n\nexport class CreateCatDto {\n  name: string;\n  age: number;\n  breed: string;\n}\n\nexport const createCatSchema = Joi.object({\n  name: Joi.string().required(),\n  age: Joi.number().required(),\n  breed: Joi.string().required(),\n});\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: Joi.ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomThrottlerGuard.html":{"url":"injectables/CustomThrottlerGuard.html","title":"injectable - CustomThrottlerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomThrottlerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/throttler.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                Handle ip behind proxy\n\n            \n\n            \n                Extends\n            \n            \n                    ThrottlerGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getTracker\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getTracker\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTracker(req: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/throttler.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ThrottlerGuard } from '@nestjs/throttler';\n\n/**\n * Handle ip behind proxy\n */\n@Injectable()\nexport class CustomThrottlerGuard extends ThrottlerGuard {\n  protected getTracker(req: Record): string {\n    return req.ips.length ? req.ips[0] : req.ip;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/cats/dto/validation.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/dto/validation.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe-1.html":{"url":"injectables/JoiValidationPipe-1.html","title":"injectable - JoiValidationPipe-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: Joi.ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/cats/dto/create-cat.dto.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                    Joi.ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/cats/dto/create-cat.dto.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\nimport * as Joi from 'joi';\n\nexport class CreateCatDto {\n  name: string;\n  age: number;\n  breed: string;\n}\n\nexport const createCatSchema = Joi.object({\n  name: Joi.string().required(),\n  age: Joi.number().required(),\n  breed: Joi.string().required(),\n});\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: Joi.ObjectSchema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = this.schema.validate(value);\n    if (error) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/logger.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    next();\n  }\n}\n// Functional\nexport function logger(req: Request, res: Response, next: NextFunction) {\n  console.log(`Request...`);\n  next();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/role.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/role.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES } from 'src/common/decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    // get controller level roles and replaced by method level\n    const roles = this.reflector.getAllAndOverride(ROLES, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    // if no specify role\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    // compare role\n    const user = request.user?.role;\n    // return roles.some((role) => user.roles.includes(role));\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { CatsService } from 'src/cats/cats.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private catsService: CatsService,\n  ) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Global, Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { CatsModule } from 'src/cats/cats.module';\n\n// @Global()\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => CatsModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/cats/cats.model.ts\n            \n            class\n            Cat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/dto/create-cat.dto.ts\n            \n            variable\n            createCatSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/dto/validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/decorators/cookies.decorator.ts\n            \n            variable\n            Cookies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            ROLES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/users.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/throttler.guard.ts\n            \n            injectable\n            CustomThrottlerGuard\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middlewares/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/upload.ts\n            \n            variable\n            attachmentFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/utils/upload.ts\n            \n            variable\n            csvFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/upload.ts\n            \n            variable\n            fileStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/upload.ts\n            \n            variable\n            imageFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/schedule : ^1.0.2\n        \n            @nestjs/sequelize : ^8.0.0\n        \n            @nestjs/throttler : ^2.0.0\n        \n            cache-manager : ^3.6.0\n        \n            cookie-parser : ^1.4.6\n        \n            csurf : ^1.11.0\n        \n            joi : ^17.5.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.13.0\n        \n            sequelize-typescript : ^2.1.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/roles.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/middlewares/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\ntest\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            attachmentFilter   (src/.../upload.ts)\n                        \n                        \n                            Cookies   (src/.../cookies.decorator.ts)\n                        \n                        \n                            createCatSchema   (src/.../create-cat.dto.ts)\n                        \n                        \n                            csvFilter   (src/.../upload.ts)\n                        \n                        \n                            fileStorage   (src/.../upload.ts)\n                        \n                        \n                            imageFilter   (src/.../upload.ts)\n                        \n                        \n                            IS_PUBLIC   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES   (src/.../roles.decorator.ts)\n                        \n                        \n                            User   (src/.../users.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/utils/upload.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        attachmentFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, cb) => {\n  const allowedMimes = ['application/pdf'];\n  if (!allowedMimes.includes(file.mimetype)) {\n    cb(new BadRequestException('Only pdf file is accepted'));\n  } else {\n    cb(null, true);\n  }\n}\n                    \n                \n\n            \n                \n                    List of mime type -- https://www.freeformatter.com/mime-types-list.html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, cb) => {\n  const allowedMimes = [\n    'text/csv',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  ];\n\n  if (!allowedMimes.includes(file.mimetype)) {\n    cb(new BadRequestException('Only csv and excel file is accepted'));\n  } else {\n    cb(null, true);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (filepath) => {\n  return multer.diskStorage({\n    destination: (req, file, cb) => {\n      cb(null, 'uploads/' + filepath);\n    },\n    filename: (req, file, cb) => {\n      cb(null, Date.now() + path.extname(file.originalname));\n    },\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, cb) => {\n  const allowedMimes = ['image/jpeg', 'image/pjpeg', 'image/png', 'image/gif'];\n  if (!allowedMimes.includes(file.mimetype)) {\n    cb(new BadRequestException('Only jpeg, png and gif file is accepted'));\n  } else {\n    cb(null, true);\n  }\n}\n                    \n                \n\n            \n                \n                    List of mime type -- https://www.freeformatter.com/mime-types-list.html\n\n                \n            \n\n        \n    \n\n    src/common/decorators/cookies.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Cookies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return data ? request.signedCookies?.[data] : request.signedCookies;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/cats/dto/create-cat.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCatSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  name: Joi.string().required(),\n  age: Joi.number().required(),\n  breed: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC, true)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/users.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
